#include <math.h>
#include <stdlib.h>
#include <iostream>
#include <GL/glut.h>
using namespace std;
int xc, yc, p, r;
void plot_points(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(xc + x, yc + y);
    glVertex2i(xc + y, yc + x);
    glVertex2i(xc + y, yc - x);
    glVertex2i(xc + x, yc - y);
    glVertex2i(xc - x, yc - y);
    glVertex2i(xc - y, yc - x);
    glVertex2i(xc - y, yc + x);
    glVertex2i(xc - x, yc + y);
    glEnd();
}
void display() {
    int x = 0, y = r;
    p = 3 - 2 * r;
    plot_points(x, y);
    while (x <= y) {
        x = x + 1;
        if (p < 0) {
            p = p + 4 * x + 6;
        }
        else {
            y = y - 1;
            p = p + 4 * (x - y) + 10;
        }
        plot_points(x, y);
    }
    glFlush();
}
void Init() {
    glClearColor(1.0, 0.3, 0.3, 0.0);
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0);
    gluOrtho2D(0, 500, 0, 500);
    glFlush();
}
int main(int argc, char* argv[]) {
    cout << "enter xc: ";
    cin >> xc;
    cout << "enter yc: ";
    cin >> yc;
    cout << "enter r: ";
    cin >> r;
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(10, 10);
    glutCreateWindow("BRES_CIRCLE");
    Init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}